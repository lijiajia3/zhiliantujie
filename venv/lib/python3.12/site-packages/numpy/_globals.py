
import enum

from ._utils import set_module as _set_module

__all__ = ['_NoValue', '_CopyMode']




if '_is_loaded' in globals():
    raise RuntimeError('Reloading numpy._globals is not allowed')
_is_loaded = True


class _NoValueType:
    
    __instance = None
    def __new__(cls):
        
        if not cls.__instance:
            cls.__instance = super().__new__(cls)
        return cls.__instance

    def __repr__(self):
        return "<no value>"


_NoValue = _NoValueType()


@_set_module("numpy")
class _CopyMode(enum.Enum):
    

    ALWAYS = True
    NEVER = False
    IF_NEEDED = 2

    def __bool__(self):
        
        if self == _CopyMode.ALWAYS:
            return True

        if self == _CopyMode.NEVER:
            return False

        raise ValueError(f"{self} is neither True nor False.")
