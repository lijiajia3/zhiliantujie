

import functools
import itertools


def _nonblank(str):
    return str and not str.startswith("


@functools.singledispatch
def yield_lines(iterable):
    r
    return itertools.chain.from_iterable(map(yield_lines, iterable))


@yield_lines.register(str)
def _(text):
    return filter(_nonblank, map(str.strip, text.splitlines()))


def drop_comment(line):
    
    return line.partition(" 


def join_continuation(lines):
    r
    lines = iter(lines)
    for item in lines:
        while item.endswith("\\"):
            try:
                item = item[:-2].strip() + next(lines)
            except StopIteration:
                return
        yield item
